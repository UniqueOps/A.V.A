#!/bin/bash
# Description: Global Variables
# Contributors: Casey McLaughlin

eval "$(curl -k -s https://gitlab.com/uniqueops/ava/raw/master/var/colors)"                                 # Add Color Module
eval "$(curl -k -s https://gitlab.com/uniqueops/ava/raw/master/var/core.shl)"
eval "$(curl -k -s https://gitlab.com/uniqueops/ava/raw/master/sys/tables/colorize.shl)"                    # Add Table Color Module
eval "$(curl -k -s https://gitlab.com/uniqueops/ava/raw/master/sys/tables/format.shl)"                      # Add Table Module

# Basic Server Information
readonly Core_Server_Hostname=$(hostname);
readonly Core_Server_IP=$(hostname -i);
readonly Core_Server_Processors=$(nproc);
readonly Core_Server_Uptime=$(uptime | awk '{print $3,$4}' | tr ',' ' ');
#Core_Server_OS=$(lsb_release -a | awk 'FNR==3 {$1=""; $6=""; print}' | tr 'C' 'C'); #Not Working

function Global_DomainCheck() {
printf "\\nDomain: "                                                                                        # Display Question
read -r Global_DomainCheck_Domain                                                                           # Question Entry
echo "";                                                                                                    # Line Space
Global_DomainCheck_Domain=$(echo "$Global_DomainCheck_Domain" | tr '[:upper:]' '[:lower:]')                 # Entry to Lowercase
Global_DomainCheck_Domain=$(echo "$Global_DomainCheck_Domain" | sed 's/[^a-z0-9.:-\/]//g')                  # Remove Special Characters
Global_DomainCheck_Domain=${Global_DomainCheck_Domain#*//};                                                 # Remove Protocol Prefix
Global_DomainCheck_Domain=${Global_DomainCheck_Domain#*www.};                                               # Remove WWW. Prefix
Global_DomainCheck_Domain=$(echo "$Global_DomainCheck_Domain" | cut -f1 -d"/")                              # Remove Domain Suffix
Global_DomainCheck_Domain_TLD=$(echo "$Global_DomainCheck_Domain" | awk -F "." '{print $NF}')               # TLD to Variable
Global_DomainCheck_Domain_TLD=$(echo "$Global_DomainCheck_Domain_TLD" | awk '{print toupper($0)}')          # TLD to UPPERCASE
if [ -z "$Global_DomainCheck_Domain" ]; then                                                                # Empty Domain Check
  Global_DomainCheck_Status="Invalid"                                                                       # Return Invalid Domain Trigger
else
  Global_DomainCheck_Whois=$(whois "$Global_DomainCheck_Domain" | grep 'No match for')                      # Generate Domain Registered Check
  if [ "$Global_DomainCheck_Whois" = "" ]; then                                                             # Check If Domain Is Registered
    Global_DomainCheck_Status="Registered"                                                                  # Return Registered Trigger
  else
    Global_DomainCheck_Status="Unregistered"                                                                # Return Not Registered Trigger
  fi
fi
}

function Global_ConvertIP() {
IP=$1; IPNUM=0
for (( i=0 ; i<4 ; ++i )); do
  ((IPNUM+=${IP%%.*}*$((256**$((3-i))))))
  IP=${IP#*.}
done
Global_ConvertIP_Output=$IPNUM 
} 

function Global_ConvertDecimal() {
temp1=$(($(($(($((${1}/256))/256))/256))%256)).
temp2=$(($(($((${1}/256))/256))%256)).
temp3=$(($((${1}/256))%256)).
temp4=$((${1}%256))
Global_ConvertDecimal_Output=$temp1$temp2$temp3$temp4
}

function Global_CheckIP() {
Global_ConvertIP "$1"
if [[ "$1" -ge "167772160" && "$1" -le "184549375" ]]; then                                                 # Trigger If IP = 10.0.0.0-10.255.255.255
  Global_CheckIP_Result="Private";
elif [[ "$1" -ge "2886729728" && "$1" -le "2887778303" ]]; then                                             # Trigger If IP = 172.16.0.0-172.31.255.255
  Global_CheckIP_Result="Private";
elif [[ "$1" -ge "3232235520" && "$1" -le "3232301055" ]]; then                                             # Trigger If IP = 192.168.0.0-192.168.255.255
  Global_CheckIP_Result="Private";
else
  Global_CheckIP_Result="Public";
fi
}
