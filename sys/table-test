#!/bin/bash

###################################################################################
# Notes                                                                           #
# - Convert Table_Row_Output to contain all variables for fields                  #
# - Convert Size Variable Loop to use this array instead                          #
# - Attempt to make column headers space friendly (Sed spaces to _?)              #
# - Convert print table to function form                                          #
# - Convert Print Row to Self Generating Forum (Table_Row_Output may be solution) #
###################################################################################

Table_Title="Server Info"                                                               # Declare Table Title
declare -a Table_Header_Labels=('Hostname' 'IP');                                       # Declare Column Headers
declare -a Table_Row_Output=('');

# Field 1 - Hostname
Hostname="vps.domain.com"                                                               # Output for Field 1

# Field 2 - IP
IP="192.168.1.100"                                                                      # Output for Field 2

# Generate Size Variables
for i in "${Table_Header_Labels[@]}" 
do
  Output=${!i}
  (( ${i}_Size = ${#Output} >= ${#i} ? ${#Output} : ${#i} ))                            # Generate Size Variables

  if [ "${i}" = "${Table_Header_Labels[0]}" ]; then
    x=${i}_Size
    Table_Header_Format=" %-${!x}s"                                                     # Declare Table_Header_Format 
    Table_Width="+ ${!x}"                                                               # Declare Table_Width
  else
    if [ "${i}" != "${Table_Header_Labels[-1]}" ]; then
      x=${i}_Size
      Table_Header_Format=$Table_Header_Format" | %-${!x}s"                             # Alter Table_Header_Format
      Table_Width="$Table_Width + ${!x}"                                                # Alter Table_Width
    else
      x=${i}_Size
      Table_Header_Format=$Table_Header_Format" | %-${!x}s\\n"                          # Finalize Table_Header_Format
      Table_Row_Format=$Table_Header_Format                                             # Finalize Table_Row_Format
      Table_Width=$Table_Width" + ${!x}"                                                # Alter Table_Width
      Table_Width=$(( 2 + ( 3 * ( ${#Table_Header_Labels[@]} - 1 ) ) "$Table_Width"));  # Calculate Table Total Width
    fi
  fi
done

# Format Table Title
Table_Title_Size=${#Table_Title}                                                        # Detect Title Size
if [ "$Table_Title_Size" -gt "$Table_Width" ]; then
  Table_Width=$Table_Title_Size
fi
Table_Title_Divider=$(( ( Table_Width - ( Table_Title_Size + 2 ) ) / 2 ));
Table_Title_Divider_2=$Table_Title_Divider;
if [ $(( Table_Width % 2 )) -ne $(( Table_Title_Size % 2 )) ]; then
  ((Table_Title_Divider_2++));
fi

# Print the Table
printf "\\n$Color_Blue%*s$Color_Reset" $Table_Title_Divider | tr ' ' '=';               # Print Title Left Glyfs
printf " %s " "$Table_Title"                                                            # Print Title
printf "$Color_Blue%*s$Color_Reset\\n" $Table_Title_Divider_2 | tr ' ' '='              # Print Title Right Glyfs
printf "$Table_Header_Format" "${Table_Header_Labels[@]}"                               # Print Headers
printf "%*s\\n" "$Table_Width" | tr ' ' '=';                                            # Print Header Divider
printf "$Table_Row_Format" "$Hostname" "$IP"                                            # Print Row