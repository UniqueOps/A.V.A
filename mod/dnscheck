#!/bin/bash

# Add Color
eval "$(curl -k -s https://gitlab.com/uniqueops/ava/raw/master/var/colors)"

# Question: What is the domain?
echo -e "\\nWhat is the domain?"
read -r domain;

# Column Sizes
status_size=${#FIELDS[0]}
info_size=${#FIELDS[1]}

STATUS_INFO="[--]"
STATUS_WARNING="[??]"
STATUS_PASS="[OK]"
STATUS_FAIL="[!!]"

# Information

# Services

# Functions

function print_row() {                                                                                                  # Create Function To Print Table Rows
  format=" %-${status_size}s%b %-${info_size}s%b\\n"                                                                    # Declare Row Format
  printf "$format" "${status[$1]}" "" "${info[$1]}"                                                                     # Add Prefix ("") To Fields With Colors
}

# Field Accessors

# Setters

# These functions update the parallel arrays, and manage the size variable
# for the respective field.

# "Set" here is a bit of a misnomer since they are really adding a new element
# to the end of a list instead of setting the value of an element.
# Using the convention "add_field" might be more appropriate here.

function set_status() {
  if [ ${#1} -gt "$status_size" ]; then
    status_size=${#1}
  fi
  
  if [ "$1" == "$STATUS_INFO" ]; then
    status=("${status[@]}" "$Color_White$1$Color_Reset")
  elif [ "$1" == "$STATUS_WARNING" ]; then
    status=("${status[@]}" "$Color_Yellow$1$Color_Reset")
  elif [ "$1" == "$STATUS_PASS" ]; then
    status=("${status[@]}" "$Color_Green$1$Color_Reset")
  elif [ "$1" == "$STATUS_FAIL" ]; then
    status=("${status[@]}" "$Color_Red$1$Color_Reset")
  fi
}

function set_info() {
  info=("${info[@]}" "$1")
  
  if [ ${#1} -gt "$info_size" ]; then
    info_size=${#1}
  fi
}

# "Constructor"

function new_service() {
  # $1 = status
  # $2 = info

  set_status "$1"
  set_info "$2"
}

# Service Checks

function Global_Nameserver_Check() {
  Global_Nameserver_Check_Status="$STATUS_FAIL"
  Global_Nameserver_Check_Info=$(dig ns +short "$domain" | sort | sed -e :a -e '$!N; s/\n/ | /; ta');
  
  new_service "$Global_Nameserver_Check_Status" "$Global_Nameserver_Check_Info"
}

function check_webserver() {
  apache_status="$STATUS_PASS"
  apache_info="Information also goes here."

  new_service "$apache_status" "$apache_info"
}

function services_main() {

  # Row Order
  Global_Nameserver_Check
  check_webserver
  
  # Title
  TITLE="DNS Check"
  title_size=${#TITLE}

  # Formatting
  width=$(( 
      2 \
      + status_size \
      + info_size ))

  # Print Table
  title_divider=$(( ( width - ( title_size + 2 ) ) / 2 )) 
  printf "\\n$Color_Blue%*s$Color_White" $title_divider | tr ' ' '=';
  printf " %s " "$TITLE"
  printf "$Color_Blue%*s$Color_Reset\\n" $title_divider | tr ' ' '='

  # Print Rows
  for ((i=0; i<${#status[*]}; i++)); do
    print_row "$i"
  done
  
  # Print Footer
  printf "%*s\\n" "$width" | tr ' ' '=';
}

services_main
